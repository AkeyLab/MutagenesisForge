library(tidyverse)
data <- read_tsv("..tester0.txt")
data <- read_tsv("../tester0.txt")
data
data <- read_tsv("../tester0.vcf")
data <- read_tsv("../tester0.txt")
data
data
data <- read_tsv("../prob_results.txt")
data <- read_tsv("../prob_results.tsv")
data
data <- read_csv("../prob_results.tsv")
data
data <- read.csv("../prob_results.tsv", sep = "/t")
data <- read.csv("../prob_results.tsv", sep = " ")
data
data <- read_tsv("../prob_results.tsv")
data
data
vep.data <- read_tsv("../prob_results.tsv")
vep.data
ggplot(data = vep.data, aes(x = Consequnce, y = Frequency)) +
geom_bar()
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar()
ggplot(data = vep.data, aes(x = Frequency)) +
geom_bar()
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity")
ggplot(data = vep.data, aes(x = Consequence, y = Frequency, color = Consequence)) +
geom_bar(stat = "identity")
ggplot(data = vep.data, aes(x = Consequence, y = Frequency, color = Consequence)) +
geom_bar(stat = "identity")
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme()
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme(x.labels = FALSE)
??theme()
help(theme())
help(theme
help(theme)
help(theme)
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme(axis.text.y =  = FALSE)
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme(axis.text.y = FALSE)
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme(axis.text.y = element_blank())
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_blank())
ggplot(data = vep.data, aes(x = Consequence, y = Frequency, color = Consequence)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_blank())
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_blank())
ggplot(data = vep.data, aes(x = Consequence, y = Frequency, fill = Consequence)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_blank())
ggsave("test.png")
getwd()
ggplot(data = vep.data, aes(x = Consequence, y = Frequency, fill = Consequence)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_blank())
ggplot(data = vep.data, aes(x = Consequence, y = Frequency, fill = Consequence)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_blank())
ggplot(data = vep.data, aes(x = Consequence, y = Frequency, fill = Consequence)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
Consequence
vep.data
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity")
pie(vep.data$Frequency, labels = vep.data$Consequence)
vep.data <- read_tsv("../prob_results.tsv")
pie(vep.data$Frequency, labels = vep.data$Consequence)
legend("topright", legend = vep.data$Consequence)
vep.data
# High impact SO terms
high_impact <- c(
"transcript_ablation",
"splice_acceptor_variant",
"splice_donor_variant",
"stop_gained",
"frameshift_variant",
"stop_lost",
"start_lost",
"transcript_amplification",
"feature_elongation",
"feature_truncation"
)
# Moderate impact SO terms
moderate_impact <- c(
"inframe_insertion",
"inframe_deletion",
"missense_variant",
"protein_altering_variant"
)
# Low impact SO terms
low_impact <- c(
"splice_donor_5th_base_variant",
"splice_region_variant",
"splice_donor_region_variant",
"splice_polypyrimidine_tract_variant",
"incomplete_terminal_codon_variant",
"start_retained_variant",
"stop_retained_variant",
"synonymous_variant"
)
# Modifier impact SO terms
modifier_impact <- c(
"coding_sequence_variant",
"mature_miRNA_variant",
"5_prime_UTR_variant",
"3_prime_UTR_variant",
"non_coding_transcript_exon_variant",
"intron_variant",
"NMD_transcript_variant",
"non_coding_transcript_variant",
"coding_transcript_variant",
"upstream_gene_variant",
"downstream_gene_variant",
"TFBS_ablation",
"TFBS_amplification",
"TF_binding_site_variant",
"regulatory_region_ablation",
"regulatory_region_amplification",
"regulatory_region_variant",
"intergenic_variant",
"sequence_variant"
)
# View the vectors
high_impact
moderate_impact
low_impact
modifier_impact
high_impact
moderate_impact
low_impact
modifier_impact
vep.data
vep.data <- read_tsv("../prob_results.tsv") +
mutate(impact = switch(
Consequence %in% high_impact = "HIGH",
vep.data <- read_tsv("../prob_results.tsv") +
mutate(impact = switch(
Consequence %in% high_impact = "HIGH",
vep.data <- read_tsv("../prob_results.tsv") +
mutate(impact = switch(
Consequence %in% high_impact = "HIGH",
vep.data <- read_tsv("../prob_results.tsv") %>%
mutate(impact = case_when(
Consequence %in% high_impact ~ "HIGH",
Consequence %in% moderate_impact ~ "MODERATE",
Consequence %in% low_impact ~ "LOW",
Consequence %in% modifier_impact ~ "MODIFIER",
TRUE ~ "UNKNOWN"  # Default case if no match is found
))
vep.data
ggplot(data = vep.data, aes(x = impact, y = Frequency)) +
geom_bar(stat = "identity")
ggplot(data = vep.data, aes(x = Consequence, y = Frequency)) +
geom_bar(stat = "identity") +
facet_wrap(~ impact)
